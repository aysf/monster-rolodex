{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchField","_this2","fetch","then","r","json","u","setState","_this3","_this$state","filteredMonsters","filter","toLowerCase","includes","search_box_component_SearchBox","e","target","value","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"mTAIaA,SAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BACtBR,EAAAC,EAAAC,cAAA,UAAKH,EAAMQ,QAAQE,MACnBT,EAAAC,EAAAC,cAAA,aAAKH,EAAMQ,QAAQG,MAAnB,QCHKC,SAAW,SAACZ,GACrB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACjBJ,EAAMa,SAASC,IAAI,SAACN,GAAD,OAChBP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,SCJ/BS,SAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACrBnB,EAAAC,EAAAC,cAAA,SACIC,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCHG,qBAjCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXlB,SAAU,GACVmB,YAAa,IALHR,mFASM,IAAAS,EAAAN,KAClBO,MAAM,8CACHC,KAAK,SAACC,GAAD,OAAOA,EAAEC,SACdF,KAAK,SAACG,GAAD,OAAOL,EAAKM,SAAS,CAAE1B,SAAUyB,uCAGlC,IAAAE,EAAAb,KAAAc,EAC2Bd,KAAKI,MAA/BlB,EADD4B,EACC5B,SAAUmB,EADXS,EACWT,YACZU,EAAmB7B,EAAS8B,OAAO,SAACnC,GAAD,OACvCA,EAAQE,KAAKkC,cAAcC,SAASb,EAAYY,iBAElD,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC2C,EAAD,CACE3B,YAAY,oBACZC,aAAc,SAAC2B,GAAD,OAAOP,EAAKD,SAAS,CAAEP,YAAae,EAAEC,OAAOC,WAE7DhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAUrC,SAAU6B,YA5BVS,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAR,EAAA,GAAAZ,KAAAoB,EAAAC,KAAA,UAAqBrB,KAAK,SAAAjB,GAAiD,IAA9CuC,EAA8CvC,EAA9CuC,OAAQC,EAAsCxC,EAAtCwC,OAAQC,EAA8BzC,EAA9ByC,OAAQC,EAAsB1C,EAAtB0C,OAAQC,EAAc3C,EAAd2C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.08ec4413.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n        <h2>{props.monster.name}</h2>\n        <p> {props.monster.email} </p>\n    </div>\n)","import React from \"react\";\nimport { Card } from \"../card/card.component\";\n\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n    return <div className='card-list'>\n        {props.monsters.map((monster) => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n    </div>\n}","import React from \"react\";\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n)","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((r) => r.json())\n      .then((u) => this.setState({ monsters: u }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"find your monster\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}